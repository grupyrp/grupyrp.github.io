#!/usr/bin/env node
'use strict';

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var run = function () {
  var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee() {
    var project, currentNpmCommand, output;
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            project = new _project2.default();
            currentNpmCommand = JSON.parse(process.env.npm_config_argv).original[0];

            if (!(currentNpmCommand === 'install' || currentNpmCommand === 'i')) {
              _context.next = 7;
              break;
            }

            _context.next = 5;
            return project.linkBins();

          case 5:
            _context.next = 21;
            break;

          case 7:
            if (!(currentNpmCommand === 'publish')) {
              _context.next = 21;
              break;
            }

            _context.next = 10;
            return project.compile();

          case 10:
            _context.next = 12;
            return project.directory.execSh('npm publish dist');

          case 12:
            output = _context.sent;

            if (output.trim()) {
              process.stdout.write(output.trim() + '\n');
            }
            _context.next = 16;
            return project.directory.rm('dist');

          case 16:
            _context.t0 = process;
            _context.next = 19;
            return project.directory.execSh('pgrep npm');

          case 19:
            _context.t1 = _context.sent;

            _context.t0.kill.call(_context.t0, _context.t1);

          case 21:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  return function run() {
    return _ref.apply(this, arguments);
  };
}();

var _project = require('../lib/project');

var _project2 = _interopRequireDefault(_project);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

run().catch(function (error) {
  setTimeout(function () {
    throw error;
  }, 0);
});